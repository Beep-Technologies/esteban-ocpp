// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Lowen",
            "email": "lowen@beepbeep.tech"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v2/ocpp/applications/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Create an Application",
                "parameters": [
                    {
                        "description": "Post CreateApplicationReq body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateApplicationReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateApplicationResp"
                        }
                    }
                }
            }
        },
        "/v2/ocpp/applications/callbacks": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Applications"
                ],
                "summary": "Set Callback URL for Application",
                "parameters": [
                    {
                        "description": "Post CreateApplicationCallbackReq body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateApplicationCallbackReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateApplicationCallbackResp"
                        }
                    }
                }
            }
        },
        "/v2/ocpp/charge_points": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charge Points"
                ],
                "summary": "Create a Charge Point",
                "parameters": [
                    {
                        "description": "Post CreateChargePointReq body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateChargePointReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateChargePointResp"
                        }
                    }
                }
            }
        },
        "/v2/ocpp/charge_points/id_tags": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Charge Points"
                ],
                "summary": "Create a Charge Point ID tag",
                "parameters": [
                    {
                        "description": "Post CreateChargePointIdTagReq body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateChargePointIdTagReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rpc.CreateChargePointIdTagReq"
                        }
                    }
                }
            }
        },
        "/v2/ocpp/operations/get-latest-status": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Get Status of Connectors",
                "parameters": [
                    {
                        "description": "Post GetLatestStatus body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.GetLatestStatusNotificationsReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rpc.GetLatestStatusNotificationsResp"
                        }
                    }
                }
            }
        },
        "/v2/ocpp/operations/remote-start-transaction": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Request Charge Point to Start a Transaction",
                "parameters": [
                    {
                        "description": "Post RemoteStartTransactionReq body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.RemoteStartTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rpc.RemoteStartTransactionResp"
                        }
                    }
                }
            }
        },
        "/v2/ocpp/operations/remote-stop-transaction": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Operations"
                ],
                "summary": "Request Charge Point to Stop a Transaction",
                "parameters": [
                    {
                        "description": "Post RemoteStopTransactionReq body",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/rpc.RemoteStopTransactionReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/rpc.RemoteStopTransactionResp"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "rpc.Application": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                }
            }
        },
        "rpc.ApplicationCallback": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "callback_event": {
                    "type": "string"
                },
                "callback_url": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                }
            }
        },
        "rpc.ChargePoint": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "charge_box_serial_number": {
                    "type": "string"
                },
                "charge_point_identifier": {
                    "type": "string"
                },
                "charge_point_model": {
                    "type": "string"
                },
                "charge_point_serial_number": {
                    "type": "string"
                },
                "charge_point_vendor": {
                    "type": "string"
                },
                "connector_count": {
                    "type": "integer"
                },
                "firmware_version": {
                    "type": "string"
                },
                "iccid": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "imsi": {
                    "type": "string"
                },
                "meter_serial_number": {
                    "type": "string"
                },
                "meter_type": {
                    "type": "string"
                },
                "ocpp_protocol": {
                    "type": "string"
                }
            }
        },
        "rpc.CreateApplicationCallbackReq": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "callback_event": {
                    "type": "string"
                },
                "callback_url": {
                    "type": "string"
                }
            }
        },
        "rpc.CreateApplicationCallbackResp": {
            "type": "object",
            "properties": {
                "application_callback": {
                    "$ref": "#/definitions/rpc.ApplicationCallback"
                }
            }
        },
        "rpc.CreateApplicationReq": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "rpc.CreateApplicationResp": {
            "type": "object",
            "properties": {
                "application": {
                    "$ref": "#/definitions/rpc.Application"
                }
            }
        },
        "rpc.CreateChargePointIdTagReq": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "charge_point_identifier": {
                    "type": "string"
                },
                "id_tag": {
                    "type": "string"
                }
            }
        },
        "rpc.CreateChargePointReq": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "charge_point_identifier": {
                    "type": "string"
                },
                "ocpp_protocol": {
                    "type": "string"
                }
            }
        },
        "rpc.CreateChargePointResp": {
            "type": "object",
            "properties": {
                "charge_point": {
                    "$ref": "#/definitions/rpc.ChargePoint"
                }
            }
        },
        "rpc.GetLatestStatusNotificationsReq": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "charge_point_identifier": {
                    "type": "string"
                }
            }
        },
        "rpc.GetLatestStatusNotificationsResp": {
            "type": "object",
            "properties": {
                "connector_status": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/rpc.StatusNotification"
                    }
                }
            }
        },
        "rpc.RemoteStartTransactionReq": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "charge_point_identifier": {
                    "type": "string"
                },
                "connector_id": {
                    "type": "integer"
                }
            }
        },
        "rpc.RemoteStartTransactionResp": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "integer"
                }
            }
        },
        "rpc.RemoteStopTransactionReq": {
            "type": "object",
            "properties": {
                "application_id": {
                    "type": "integer"
                },
                "charge_point_identifier": {
                    "type": "string"
                },
                "connector_id": {
                    "type": "integer"
                }
            }
        },
        "rpc.RemoteStopTransactionResp": {
            "type": "object"
        },
        "rpc.StatusNotification": {
            "type": "object",
            "properties": {
                "charge_point_id": {
                    "type": "integer"
                },
                "connector_id": {
                    "type": "integer"
                },
                "error_code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "info": {
                    "type": "string"
                },
                "reported_timestamp": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "vendor_error_code": {
                    "type": "string"
                },
                "vendor_id": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "2.0",
	Host:        "ocpp-dev.beepbeep.tech:8060",
	BasePath:    "",
	Schemes:     []string{"http"},
	Title:       "BB3 OCPP API",
	Description: "Service to interface with OCPP-compliant charge points",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
