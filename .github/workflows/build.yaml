# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: build and push docker image

on:
  push:
    branches:
      - main

jobs:
  build:
    name: build the docker image
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ${{ secrets.AWS_REGION }}

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: beepbeep3-ocpp
        IMAGE_TAG: git-${{ github.sha }}
        GITHUB_TOKEN: ${{secrets.GO_GITHUB_TOKEN}}
      run: |
        docker build --build-arg GITHUB_TOKEN=$GITHUB_TOKEN -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f ./Dockerfile.bb3-ocpp-ws .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

    - name: Logout of Amazon ECR
      if: always()
      run: docker logout ${{ steps.login-ecr.outputs.registry }}

    - name: Move cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Send messages to telegram chat
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.DEV_TELEGRAM_TO }}
        token: ${{ secrets.DEV_TELEGRAM_TOKEN }}
        message: |
          beepbeep3-ocpp build [${{ job.status }}]
          git-${{ github.sha }}
