// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: transactions.proto

package rpc

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type GetTransactionByIdReq struct {
	TransactionId        uint32   `protobuf:"varint,1,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionByIdReq) Reset()         { *m = GetTransactionByIdReq{} }
func (m *GetTransactionByIdReq) String() string { return proto.CompactTextString(m) }
func (*GetTransactionByIdReq) ProtoMessage()    {}
func (*GetTransactionByIdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b72849cf10e9c77, []int{0}
}
func (m *GetTransactionByIdReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTransactionByIdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTransactionByIdReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTransactionByIdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionByIdReq.Merge(m, src)
}
func (m *GetTransactionByIdReq) XXX_Size() int {
	return m.Size()
}
func (m *GetTransactionByIdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionByIdReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionByIdReq proto.InternalMessageInfo

type GetTransactionByIdRes struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	ChargePointId        int32    `protobuf:"varint,2,opt,name=chargePoint_id,json=chargePointId,proto3" json:"chargePoint_id,omitempty"`
	ConnectorId          int32    `protobuf:"varint,3,opt,name=connector_id,json=connectorId,proto3" json:"connector_id,omitempty"`
	IdTag                string   `protobuf:"bytes,4,opt,name=id_tag,json=idTag,proto3" json:"id_tag,omitempty"`
	Started              bool     `protobuf:"varint,5,opt,name=started,proto3" json:"started,omitempty"`
	Stopped              bool     `protobuf:"varint,6,opt,name=stopped,proto3" json:"stopped,omitempty"`
	StartTimestamp       string   `protobuf:"bytes,7,opt,name=start_timestamp,json=startTimestamp,proto3" json:"start_timestamp,omitempty"`
	StopTimestamp        string   `protobuf:"bytes,8,opt,name=stop_timestamp,json=stopTimestamp,proto3" json:"stop_timestamp,omitempty"`
	StartMeterValue      int32    `protobuf:"varint,9,opt,name=start_meter_value,json=startMeterValue,proto3" json:"start_meter_value,omitempty"`
	StopMeterValue       int32    `protobuf:"varint,10,opt,name=stop_meter_value,json=stopMeterValue,proto3" json:"stop_meter_value,omitempty"`
	StopReason           string   `protobuf:"bytes,11,opt,name=stop_reason,json=stopReason,proto3" json:"stop_reason,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetTransactionByIdRes) Reset()         { *m = GetTransactionByIdRes{} }
func (m *GetTransactionByIdRes) String() string { return proto.CompactTextString(m) }
func (*GetTransactionByIdRes) ProtoMessage()    {}
func (*GetTransactionByIdRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b72849cf10e9c77, []int{1}
}
func (m *GetTransactionByIdRes) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetTransactionByIdRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetTransactionByIdRes.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetTransactionByIdRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetTransactionByIdRes.Merge(m, src)
}
func (m *GetTransactionByIdRes) XXX_Size() int {
	return m.Size()
}
func (m *GetTransactionByIdRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetTransactionByIdRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetTransactionByIdRes proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetTransactionByIdReq)(nil), "ocpp.GetTransactionByIdReq")
	proto.RegisterType((*GetTransactionByIdRes)(nil), "ocpp.GetTransactionByIdRes")
}

func init() { proto.RegisterFile("transactions.proto", fileDescriptor_0b72849cf10e9c77) }

var fileDescriptor_0b72849cf10e9c77 = []byte{
	// 355 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0xbf, 0x4e, 0xeb, 0x30,
	0x14, 0xc6, 0xaf, 0xfb, 0xbf, 0xee, 0x4d, 0xef, 0xbd, 0x96, 0x2a, 0xf9, 0x32, 0x84, 0x52, 0x09,
	0x11, 0x21, 0xd1, 0x0e, 0xec, 0x0c, 0x5d, 0x50, 0x06, 0x24, 0x14, 0x55, 0x0c, 0x2c, 0x91, 0x6b,
	0x9b, 0xd4, 0x12, 0x89, 0x8d, 0xe3, 0x22, 0x31, 0xf3, 0x72, 0x1d, 0x79, 0x04, 0xda, 0x89, 0xc7,
	0x40, 0x3e, 0xa1, 0x34, 0x03, 0x5b, 0xce, 0xef, 0xfc, 0xce, 0xf7, 0x25, 0x0a, 0x26, 0xce, 0xb2,
	0xa2, 0x64, 0xdc, 0x29, 0x5d, 0x94, 0x53, 0x63, 0xb5, 0xd3, 0xa4, 0xa5, 0xb9, 0x31, 0x47, 0x17,
	0x99, 0x72, 0xab, 0xf5, 0x72, 0xca, 0x75, 0x3e, 0xcb, 0x74, 0xa6, 0x67, 0xb0, 0x5c, 0xae, 0x1f,
	0x60, 0x82, 0x01, 0x9e, 0xaa, 0xa3, 0xc9, 0x15, 0x1e, 0x5d, 0x4b, 0xb7, 0x38, 0xa4, 0xcd, 0x5f,
	0x62, 0x91, 0xc8, 0x27, 0x72, 0x8a, 0x87, 0xb5, 0x8e, 0x54, 0x09, 0x8a, 0xc6, 0x28, 0x0a, 0x92,
	0xa0, 0x46, 0x63, 0x31, 0x79, 0x6d, 0xfe, 0x1c, 0x50, 0x92, 0x21, 0x6e, 0x7c, 0x1d, 0xb5, 0x93,
	0x86, 0x12, 0x3e, 0x90, 0xaf, 0x98, 0xcd, 0xe4, 0xad, 0x56, 0x85, 0xf3, 0x81, 0x0d, 0xd8, 0x05,
	0x35, 0x1a, 0x0b, 0x72, 0x82, 0x7f, 0x73, 0x5d, 0x14, 0x92, 0x3b, 0x6d, 0xbd, 0xd4, 0x04, 0x69,
	0xf0, 0xcd, 0x62, 0x41, 0x46, 0xb8, 0xa3, 0x44, 0xea, 0x58, 0x46, 0x5b, 0x63, 0x14, 0xf5, 0x93,
	0xb6, 0x12, 0x0b, 0x96, 0x11, 0x8a, 0xbb, 0xa5, 0x63, 0xd6, 0x49, 0x41, 0xdb, 0x63, 0x14, 0xf5,
	0x92, 0xfd, 0x58, 0x6d, 0xb4, 0x31, 0x52, 0xd0, 0xce, 0x7e, 0x03, 0x23, 0x39, 0xc3, 0x7f, 0x40,
	0x4a, 0x9d, 0xca, 0x65, 0xe9, 0x58, 0x6e, 0x68, 0x17, 0x32, 0x87, 0x80, 0x17, 0x7b, 0xea, 0xdf,
	0xde, 0xdf, 0xd4, 0xbc, 0x1e, 0x78, 0x81, 0xa7, 0x07, 0xed, 0x1c, 0xff, 0xab, 0xf2, 0x72, 0xe9,
	0xa4, 0x4d, 0x9f, 0xd9, 0xe3, 0x5a, 0xd2, 0x3e, 0x7c, 0x42, 0x55, 0x74, 0xe3, 0xf9, 0x9d, 0xc7,
	0x24, 0xc2, 0x7f, 0x21, 0xb2, 0xae, 0x62, 0x50, 0xa1, 0xaa, 0x66, 0x1e, 0xe3, 0x01, 0x98, 0x56,
	0xb2, 0x52, 0x17, 0x74, 0x00, 0xcd, 0xd8, 0xa3, 0x04, 0xc8, 0xfc, 0xff, 0x66, 0x1b, 0xfe, 0xfa,
	0xd8, 0x86, 0x68, 0xb3, 0x0b, 0xd1, 0xdb, 0x2e, 0x44, 0xef, 0xbb, 0x10, 0xdd, 0x37, 0xad, 0xe1,
	0xcb, 0x0e, 0xfc, 0xe7, 0xcb, 0xcf, 0x00, 0x00, 0x00, 0xff, 0xff, 0x59, 0x30, 0xad, 0xcf, 0x32,
	0x02, 0x00, 0x00,
}

type GetTransactionByIdReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetTransactionId() uint32
}

func (this *GetTransactionByIdReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetTransactionByIdReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetTransactionByIdReqFromFace(this)
}

func (this *GetTransactionByIdReq) GetTransactionId() uint32 {
	return this.TransactionId
}

func NewGetTransactionByIdReqFromFace(that GetTransactionByIdReqFace) *GetTransactionByIdReq {
	this := &GetTransactionByIdReq{}
	this.TransactionId = that.GetTransactionId()
	return this
}

type GetTransactionByIdResFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetId() int32
	GetChargePointId() int32
	GetConnectorId() int32
	GetIdTag() string
	GetStarted() bool
	GetStopped() bool
	GetStartTimestamp() string
	GetStopTimestamp() string
	GetStartMeterValue() int32
	GetStopMeterValue() int32
	GetStopReason() string
}

func (this *GetTransactionByIdRes) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetTransactionByIdRes) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetTransactionByIdResFromFace(this)
}

func (this *GetTransactionByIdRes) GetId() int32 {
	return this.Id
}

func (this *GetTransactionByIdRes) GetChargePointId() int32 {
	return this.ChargePointId
}

func (this *GetTransactionByIdRes) GetConnectorId() int32 {
	return this.ConnectorId
}

func (this *GetTransactionByIdRes) GetIdTag() string {
	return this.IdTag
}

func (this *GetTransactionByIdRes) GetStarted() bool {
	return this.Started
}

func (this *GetTransactionByIdRes) GetStopped() bool {
	return this.Stopped
}

func (this *GetTransactionByIdRes) GetStartTimestamp() string {
	return this.StartTimestamp
}

func (this *GetTransactionByIdRes) GetStopTimestamp() string {
	return this.StopTimestamp
}

func (this *GetTransactionByIdRes) GetStartMeterValue() int32 {
	return this.StartMeterValue
}

func (this *GetTransactionByIdRes) GetStopMeterValue() int32 {
	return this.StopMeterValue
}

func (this *GetTransactionByIdRes) GetStopReason() string {
	return this.StopReason
}

func NewGetTransactionByIdResFromFace(that GetTransactionByIdResFace) *GetTransactionByIdRes {
	this := &GetTransactionByIdRes{}
	this.Id = that.GetId()
	this.ChargePointId = that.GetChargePointId()
	this.ConnectorId = that.GetConnectorId()
	this.IdTag = that.GetIdTag()
	this.Started = that.GetStarted()
	this.Stopped = that.GetStopped()
	this.StartTimestamp = that.GetStartTimestamp()
	this.StopTimestamp = that.GetStopTimestamp()
	this.StartMeterValue = that.GetStartMeterValue()
	this.StopMeterValue = that.GetStopMeterValue()
	this.StopReason = that.GetStopReason()
	return this
}

func (m *GetTransactionByIdReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTransactionByIdReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTransactionByIdReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.TransactionId != 0 {
		i = encodeVarintTransactions(dAtA, i, uint64(m.TransactionId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetTransactionByIdRes) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetTransactionByIdRes) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetTransactionByIdRes) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.StopReason) > 0 {
		i -= len(m.StopReason)
		copy(dAtA[i:], m.StopReason)
		i = encodeVarintTransactions(dAtA, i, uint64(len(m.StopReason)))
		i--
		dAtA[i] = 0x5a
	}
	if m.StopMeterValue != 0 {
		i = encodeVarintTransactions(dAtA, i, uint64(m.StopMeterValue))
		i--
		dAtA[i] = 0x50
	}
	if m.StartMeterValue != 0 {
		i = encodeVarintTransactions(dAtA, i, uint64(m.StartMeterValue))
		i--
		dAtA[i] = 0x48
	}
	if len(m.StopTimestamp) > 0 {
		i -= len(m.StopTimestamp)
		copy(dAtA[i:], m.StopTimestamp)
		i = encodeVarintTransactions(dAtA, i, uint64(len(m.StopTimestamp)))
		i--
		dAtA[i] = 0x42
	}
	if len(m.StartTimestamp) > 0 {
		i -= len(m.StartTimestamp)
		copy(dAtA[i:], m.StartTimestamp)
		i = encodeVarintTransactions(dAtA, i, uint64(len(m.StartTimestamp)))
		i--
		dAtA[i] = 0x3a
	}
	if m.Stopped {
		i--
		if m.Stopped {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Started {
		i--
		if m.Started {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.IdTag) > 0 {
		i -= len(m.IdTag)
		copy(dAtA[i:], m.IdTag)
		i = encodeVarintTransactions(dAtA, i, uint64(len(m.IdTag)))
		i--
		dAtA[i] = 0x22
	}
	if m.ConnectorId != 0 {
		i = encodeVarintTransactions(dAtA, i, uint64(m.ConnectorId))
		i--
		dAtA[i] = 0x18
	}
	if m.ChargePointId != 0 {
		i = encodeVarintTransactions(dAtA, i, uint64(m.ChargePointId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintTransactions(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func encodeVarintTransactions(dAtA []byte, offset int, v uint64) int {
	offset -= sovTransactions(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *GetTransactionByIdReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.TransactionId != 0 {
		n += 1 + sovTransactions(uint64(m.TransactionId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetTransactionByIdRes) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovTransactions(uint64(m.Id))
	}
	if m.ChargePointId != 0 {
		n += 1 + sovTransactions(uint64(m.ChargePointId))
	}
	if m.ConnectorId != 0 {
		n += 1 + sovTransactions(uint64(m.ConnectorId))
	}
	l = len(m.IdTag)
	if l > 0 {
		n += 1 + l + sovTransactions(uint64(l))
	}
	if m.Started {
		n += 2
	}
	if m.Stopped {
		n += 2
	}
	l = len(m.StartTimestamp)
	if l > 0 {
		n += 1 + l + sovTransactions(uint64(l))
	}
	l = len(m.StopTimestamp)
	if l > 0 {
		n += 1 + l + sovTransactions(uint64(l))
	}
	if m.StartMeterValue != 0 {
		n += 1 + sovTransactions(uint64(m.StartMeterValue))
	}
	if m.StopMeterValue != 0 {
		n += 1 + sovTransactions(uint64(m.StopMeterValue))
	}
	l = len(m.StopReason)
	if l > 0 {
		n += 1 + l + sovTransactions(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovTransactions(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTransactions(x uint64) (n int) {
	return sovTransactions(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *GetTransactionByIdReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTransactions
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTransactionByIdReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTransactionByIdReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field TransactionId", wireType)
			}
			m.TransactionId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.TransactionId |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipTransactions(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTransactions
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetTransactionByIdRes) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTransactions
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetTransactionByIdRes: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetTransactionByIdRes: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChargePointId", wireType)
			}
			m.ChargePointId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ChargePointId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ConnectorId", wireType)
			}
			m.ConnectorId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ConnectorId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field IdTag", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.IdTag = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Started", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Started = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Stopped", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Stopped = bool(v != 0)
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StartTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopTimestamp", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StopTimestamp = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StartMeterValue", wireType)
			}
			m.StartMeterValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StartMeterValue |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopMeterValue", wireType)
			}
			m.StopMeterValue = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.StopMeterValue |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 11:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field StopReason", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthTransactions
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthTransactions
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.StopReason = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipTransactions(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTransactions
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTransactions(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTransactions
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTransactions
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTransactions
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTransactions
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTransactions
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTransactions        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTransactions          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTransactions = fmt.Errorf("proto: unexpected end of group")
)
