// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: applications.proto

package rpc

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Application struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Uuid                 string   `protobuf:"bytes,2,opt,name=uuid,proto3" json:"uuid"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Application) Reset()         { *m = Application{} }
func (m *Application) String() string { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()    {}
func (*Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{0}
}
func (m *Application) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Application.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application.Merge(m, src)
}
func (m *Application) XXX_Size() int {
	return m.Size()
}
func (m *Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Application proto.InternalMessageInfo

type ApplicationCallback struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ApplicationId        int32    `protobuf:"varint,2,opt,name=application_id,json=applicationId,proto3" json:"application_id"`
	CallbackEvent        string   `protobuf:"bytes,3,opt,name=callback_event,json=callbackEvent,proto3" json:"callback_event"`
	CallbackUrl          string   `protobuf:"bytes,4,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationCallback) Reset()         { *m = ApplicationCallback{} }
func (m *ApplicationCallback) String() string { return proto.CompactTextString(m) }
func (*ApplicationCallback) ProtoMessage()    {}
func (*ApplicationCallback) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{1}
}
func (m *ApplicationCallback) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplicationCallback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplicationCallback.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplicationCallback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationCallback.Merge(m, src)
}
func (m *ApplicationCallback) XXX_Size() int {
	return m.Size()
}
func (m *ApplicationCallback) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationCallback.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationCallback proto.InternalMessageInfo

// for exposed services
type CreateApplicationReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateApplicationReq) Reset()         { *m = CreateApplicationReq{} }
func (m *CreateApplicationReq) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationReq) ProtoMessage()    {}
func (*CreateApplicationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{2}
}
func (m *CreateApplicationReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationReq.Merge(m, src)
}
func (m *CreateApplicationReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationReq proto.InternalMessageInfo

type CreateApplicationResp struct {
	Application          *Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateApplicationResp) Reset()         { *m = CreateApplicationResp{} }
func (m *CreateApplicationResp) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationResp) ProtoMessage()    {}
func (*CreateApplicationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{3}
}
func (m *CreateApplicationResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationResp.Merge(m, src)
}
func (m *CreateApplicationResp) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationResp proto.InternalMessageInfo

type CreateApplicationCallbackReq struct {
	ApplicationId        int32    `protobuf:"varint,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CallbackEvent        string   `protobuf:"bytes,2,opt,name=callback_event,json=callbackEvent,proto3" json:"callback_event,omitempty"`
	CallbackUrl          string   `protobuf:"bytes,3,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateApplicationCallbackReq) Reset()         { *m = CreateApplicationCallbackReq{} }
func (m *CreateApplicationCallbackReq) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationCallbackReq) ProtoMessage()    {}
func (*CreateApplicationCallbackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{4}
}
func (m *CreateApplicationCallbackReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationCallbackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationCallbackReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationCallbackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationCallbackReq.Merge(m, src)
}
func (m *CreateApplicationCallbackReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationCallbackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationCallbackReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationCallbackReq proto.InternalMessageInfo

type CreateApplicationCallbackResp struct {
	ApplicationCallback  *ApplicationCallback `protobuf:"bytes,1,opt,name=application_callback,json=applicationCallback,proto3" json:"application_callback"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateApplicationCallbackResp) Reset()         { *m = CreateApplicationCallbackResp{} }
func (m *CreateApplicationCallbackResp) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationCallbackResp) ProtoMessage()    {}
func (*CreateApplicationCallbackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{5}
}
func (m *CreateApplicationCallbackResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationCallbackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationCallbackResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationCallbackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationCallbackResp.Merge(m, src)
}
func (m *CreateApplicationCallbackResp) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationCallbackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationCallbackResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationCallbackResp proto.InternalMessageInfo

type GetApplicationByUuidReq struct {
	ApplicationUuid      string   `protobuf:"bytes,1,opt,name=application_uuid,json=applicationUuid,proto3" json:"application_uuid,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetApplicationByUuidReq) Reset()         { *m = GetApplicationByUuidReq{} }
func (m *GetApplicationByUuidReq) String() string { return proto.CompactTextString(m) }
func (*GetApplicationByUuidReq) ProtoMessage()    {}
func (*GetApplicationByUuidReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{6}
}
func (m *GetApplicationByUuidReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationByUuidReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationByUuidReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationByUuidReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationByUuidReq.Merge(m, src)
}
func (m *GetApplicationByUuidReq) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationByUuidReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationByUuidReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationByUuidReq proto.InternalMessageInfo

type GetApplicationByUuidResp struct {
	Application          *Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *GetApplicationByUuidResp) Reset()         { *m = GetApplicationByUuidResp{} }
func (m *GetApplicationByUuidResp) String() string { return proto.CompactTextString(m) }
func (*GetApplicationByUuidResp) ProtoMessage()    {}
func (*GetApplicationByUuidResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{7}
}
func (m *GetApplicationByUuidResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationByUuidResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationByUuidResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationByUuidResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationByUuidResp.Merge(m, src)
}
func (m *GetApplicationByUuidResp) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationByUuidResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationByUuidResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationByUuidResp proto.InternalMessageInfo

type GetApplicationCallbackReq struct {
	ApplicationId        int32    `protobuf:"varint,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CallbackEvent        string   `protobuf:"bytes,2,opt,name=callback_event,json=callbackEvent,proto3" json:"callback_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetApplicationCallbackReq) Reset()         { *m = GetApplicationCallbackReq{} }
func (m *GetApplicationCallbackReq) String() string { return proto.CompactTextString(m) }
func (*GetApplicationCallbackReq) ProtoMessage()    {}
func (*GetApplicationCallbackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{8}
}
func (m *GetApplicationCallbackReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationCallbackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationCallbackReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationCallbackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationCallbackReq.Merge(m, src)
}
func (m *GetApplicationCallbackReq) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationCallbackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationCallbackReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationCallbackReq proto.InternalMessageInfo

type GetApplicationCallbackResp struct {
	ApplicationCallback  *ApplicationCallback `protobuf:"bytes,1,opt,name=application_callback,json=applicationCallback,proto3" json:"application_callback"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *GetApplicationCallbackResp) Reset()         { *m = GetApplicationCallbackResp{} }
func (m *GetApplicationCallbackResp) String() string { return proto.CompactTextString(m) }
func (*GetApplicationCallbackResp) ProtoMessage()    {}
func (*GetApplicationCallbackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{9}
}
func (m *GetApplicationCallbackResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationCallbackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationCallbackResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationCallbackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationCallbackResp.Merge(m, src)
}
func (m *GetApplicationCallbackResp) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationCallbackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationCallbackResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationCallbackResp proto.InternalMessageInfo

type GetApplicationCallbacksReq struct {
	ApplicationId        int32    `protobuf:"varint,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetApplicationCallbacksReq) Reset()         { *m = GetApplicationCallbacksReq{} }
func (m *GetApplicationCallbacksReq) String() string { return proto.CompactTextString(m) }
func (*GetApplicationCallbacksReq) ProtoMessage()    {}
func (*GetApplicationCallbacksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{10}
}
func (m *GetApplicationCallbacksReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationCallbacksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationCallbacksReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationCallbacksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationCallbacksReq.Merge(m, src)
}
func (m *GetApplicationCallbacksReq) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationCallbacksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationCallbacksReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationCallbacksReq proto.InternalMessageInfo

type GetApplicationCallbacksResp struct {
	ApplicationCallbacks []*ApplicationCallback `protobuf:"bytes,1,rep,name=application_callbacks,json=applicationCallbacks,proto3" json:"application_callbacks"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetApplicationCallbacksResp) Reset()         { *m = GetApplicationCallbacksResp{} }
func (m *GetApplicationCallbacksResp) String() string { return proto.CompactTextString(m) }
func (*GetApplicationCallbacksResp) ProtoMessage()    {}
func (*GetApplicationCallbacksResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{11}
}
func (m *GetApplicationCallbacksResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationCallbacksResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationCallbacksResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationCallbacksResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationCallbacksResp.Merge(m, src)
}
func (m *GetApplicationCallbacksResp) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationCallbacksResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationCallbacksResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationCallbacksResp proto.InternalMessageInfo

type DeleteApplicationCallbackReq struct {
	ApplicationId        int32    `protobuf:"varint,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CallbackEvent        string   `protobuf:"bytes,2,opt,name=callback_event,json=callbackEvent,proto3" json:"callback_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteApplicationCallbackReq) Reset()         { *m = DeleteApplicationCallbackReq{} }
func (m *DeleteApplicationCallbackReq) String() string { return proto.CompactTextString(m) }
func (*DeleteApplicationCallbackReq) ProtoMessage()    {}
func (*DeleteApplicationCallbackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{12}
}
func (m *DeleteApplicationCallbackReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteApplicationCallbackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteApplicationCallbackReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteApplicationCallbackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteApplicationCallbackReq.Merge(m, src)
}
func (m *DeleteApplicationCallbackReq) XXX_Size() int {
	return m.Size()
}
func (m *DeleteApplicationCallbackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteApplicationCallbackReq.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteApplicationCallbackReq proto.InternalMessageInfo

type DeleteApplicationCallbackResp struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteApplicationCallbackResp) Reset()         { *m = DeleteApplicationCallbackResp{} }
func (m *DeleteApplicationCallbackResp) String() string { return proto.CompactTextString(m) }
func (*DeleteApplicationCallbackResp) ProtoMessage()    {}
func (*DeleteApplicationCallbackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{13}
}
func (m *DeleteApplicationCallbackResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *DeleteApplicationCallbackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_DeleteApplicationCallbackResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *DeleteApplicationCallbackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteApplicationCallbackResp.Merge(m, src)
}
func (m *DeleteApplicationCallbackResp) XXX_Size() int {
	return m.Size()
}
func (m *DeleteApplicationCallbackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteApplicationCallbackResp.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteApplicationCallbackResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Application)(nil), "ocpp.Application")
	proto.RegisterType((*ApplicationCallback)(nil), "ocpp.ApplicationCallback")
	proto.RegisterType((*CreateApplicationReq)(nil), "ocpp.CreateApplicationReq")
	proto.RegisterType((*CreateApplicationResp)(nil), "ocpp.CreateApplicationResp")
	proto.RegisterType((*CreateApplicationCallbackReq)(nil), "ocpp.CreateApplicationCallbackReq")
	proto.RegisterType((*CreateApplicationCallbackResp)(nil), "ocpp.CreateApplicationCallbackResp")
	proto.RegisterType((*GetApplicationByUuidReq)(nil), "ocpp.GetApplicationByUuidReq")
	proto.RegisterType((*GetApplicationByUuidResp)(nil), "ocpp.GetApplicationByUuidResp")
	proto.RegisterType((*GetApplicationCallbackReq)(nil), "ocpp.GetApplicationCallbackReq")
	proto.RegisterType((*GetApplicationCallbackResp)(nil), "ocpp.GetApplicationCallbackResp")
	proto.RegisterType((*GetApplicationCallbacksReq)(nil), "ocpp.GetApplicationCallbacksReq")
	proto.RegisterType((*GetApplicationCallbacksResp)(nil), "ocpp.GetApplicationCallbacksResp")
	proto.RegisterType((*DeleteApplicationCallbackReq)(nil), "ocpp.DeleteApplicationCallbackReq")
	proto.RegisterType((*DeleteApplicationCallbackResp)(nil), "ocpp.DeleteApplicationCallbackResp")
}

func init() { proto.RegisterFile("applications.proto", fileDescriptor_f65f8be3f63a21be) }

var fileDescriptor_f65f8be3f63a21be = []byte{
	// 519 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0xcf, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x6d, 0x37, 0xb1, 0x57, 0xc6, 0x86, 0xd7, 0x41, 0x3a, 0xba, 0xa4, 0x58, 0x9a, 0x34,
	0x90, 0xe8, 0x24, 0x7a, 0xe2, 0x48, 0x5a, 0x84, 0x38, 0x21, 0x59, 0xda, 0x05, 0x09, 0x4d, 0x69,
	0xea, 0x15, 0x8b, 0xac, 0xf1, 0xe2, 0x04, 0x89, 0x3b, 0x12, 0xdc, 0xf8, 0xb7, 0x76, 0xe4, 0xc8,
	0x29, 0x62, 0x3d, 0xa1, 0xfc, 0x15, 0x28, 0x5e, 0xc2, 0x9c, 0x26, 0xa9, 0x76, 0x61, 0x17, 0xab,
	0x9f, 0xdf, 0xfb, 0xde, 0x8f, 0xef, 0x73, 0x03, 0xd8, 0x11, 0xc2, 0xe3, 0xae, 0x13, 0x72, 0x7f,
	0x2e, 0x07, 0x22, 0xf0, 0x43, 0x1f, 0xb7, 0x7c, 0x57, 0x88, 0xbd, 0xe7, 0x33, 0x1e, 0x7e, 0x8c,
	0x26, 0x03, 0xd7, 0x3f, 0x3b, 0x9a, 0xf9, 0x33, 0xff, 0x48, 0x05, 0x27, 0xd1, 0xa9, 0x42, 0x0a,
	0xa8, 0x5f, 0x57, 0x24, 0xe2, 0x40, 0xfb, 0xd5, 0x75, 0x29, 0xfc, 0x10, 0x1a, 0x7c, 0x6a, 0xa0,
	0x3e, 0x3a, 0x5c, 0xb3, 0xd7, 0x93, 0xd8, 0x6a, 0xf0, 0x29, 0x6d, 0xf0, 0x29, 0xee, 0x41, 0x2b,
	0x8a, 0xf8, 0xd4, 0x68, 0xf4, 0xd1, 0xe1, 0x86, 0x7d, 0x37, 0x89, 0x2d, 0x85, 0xa9, 0x3a, 0xd3,
	0xe8, 0xdc, 0x39, 0x63, 0x46, 0xf3, 0x3a, 0x9a, 0x62, 0xaa, 0x4e, 0xf2, 0x0b, 0xc1, 0x8e, 0xd6,
	0x63, 0xe4, 0x78, 0xde, 0xc4, 0x71, 0x3f, 0xd5, 0xf6, 0x7a, 0x09, 0xf7, 0xb5, 0xed, 0x4e, 0xb2,
	0xae, 0x6b, 0x36, 0x4e, 0x62, 0x6b, 0x29, 0x42, 0x37, 0x35, 0xfc, 0x56, 0x51, 0xdd, 0xac, 0xfc,
	0x09, 0xfb, 0xcc, 0xe6, 0x61, 0x36, 0x92, 0xa2, 0x16, 0x23, 0x74, 0x33, 0xc7, 0xaf, 0x53, 0x88,
	0x87, 0x70, 0xef, 0x5f, 0x42, 0x14, 0x78, 0x46, 0x4b, 0x11, 0xb7, 0x93, 0xd8, 0x2a, 0xdc, 0xd3,
	0x76, 0x8e, 0x8e, 0x03, 0x8f, 0x3c, 0x83, 0xce, 0x28, 0x60, 0x4e, 0xc8, 0xb4, 0xfd, 0x28, 0x3b,
	0xc7, 0x38, 0x13, 0x24, 0x5d, 0x6e, 0x23, 0x93, 0xe1, 0x03, 0xec, 0x56, 0xe4, 0x4a, 0x81, 0xc7,
	0xd0, 0xd6, 0xb6, 0x50, 0x9c, 0xf6, 0x8b, 0x07, 0x83, 0xd4, 0xcd, 0x81, 0x96, 0x6b, 0x6f, 0x25,
	0xb1, 0xa5, 0x67, 0x52, 0x1d, 0x90, 0x1f, 0x08, 0x7a, 0xa5, 0xfa, 0xb9, 0xd6, 0xe9, 0x4c, 0x07,
	0x25, 0x59, 0x95, 0xf4, 0xcb, 0x12, 0x1e, 0x94, 0x24, 0x54, 0x9e, 0x2f, 0xcb, 0xf5, 0x64, 0x49,
	0x2e, 0xa5, 0x73, 0x51, 0x9c, 0x6f, 0x08, 0xf6, 0x57, 0x4c, 0x24, 0x05, 0x3e, 0x85, 0x8e, 0x3e,
	0x52, 0x4e, 0xce, 0x24, 0xe8, 0x96, 0x24, 0xc8, 0xc9, 0xb6, 0x91, 0xc4, 0x56, 0x25, 0x95, 0xee,
	0x38, 0xe5, 0x74, 0x32, 0x86, 0x47, 0x6f, 0x58, 0xa8, 0x6b, 0xf9, 0xe5, 0x38, 0x7d, 0xbd, 0xec,
	0x1c, 0x3f, 0x85, 0x6d, 0xbd, 0x8e, 0x7a, 0xe4, 0x57, 0xae, 0x6d, 0x69, 0xf7, 0x69, 0x36, 0x79,
	0x07, 0x46, 0x75, 0x15, 0x29, 0xf0, 0xf0, 0x66, 0x1e, 0x16, 0x2d, 0xe3, 0xd0, 0x2d, 0x16, 0xfc,
	0x6f, 0x76, 0x91, 0xaf, 0x08, 0xf6, 0xea, 0x7a, 0xdd, 0xa2, 0x11, 0xa3, 0xba, 0x29, 0xe4, 0xcd,
	0x57, 0x26, 0xdf, 0x11, 0x3c, 0xae, 0xad, 0x22, 0x05, 0xe6, 0xb0, 0x5b, 0x35, 0x91, 0x34, 0x50,
	0xbf, 0xb9, 0x7a, 0x9b, 0x6e, 0x12, 0x5b, 0xd5, 0x5c, 0xda, 0xa9, 0x58, 0x47, 0x12, 0x0f, 0x7a,
	0x63, 0xe6, 0xb1, 0xdb, 0xf9, 0xcf, 0x11, 0x0b, 0xf6, 0x57, 0x74, 0x93, 0xc2, 0xee, 0x5e, 0x5c,
	0x9a, 0x77, 0xfe, 0x5c, 0x9a, 0xe8, 0x62, 0x61, 0xa2, 0x9f, 0x0b, 0x13, 0xfd, 0x5e, 0x98, 0xe8,
	0x7d, 0x33, 0x10, 0xee, 0x64, 0x5d, 0x7d, 0xee, 0x87, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x23,
	0xc2, 0x40, 0xcb, 0x39, 0x06, 0x00, 0x00,
}

type ApplicationFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetId() int32
	GetUuid() string
	GetName() string
}

func (this *Application) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *Application) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewApplicationFromFace(this)
}

func (this *Application) GetId() int32 {
	return this.Id
}

func (this *Application) GetUuid() string {
	return this.Uuid
}

func (this *Application) GetName() string {
	return this.Name
}

func NewApplicationFromFace(that ApplicationFace) *Application {
	this := &Application{}
	this.Id = that.GetId()
	this.Uuid = that.GetUuid()
	this.Name = that.GetName()
	return this
}

type ApplicationCallbackFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetId() int32
	GetApplicationId() int32
	GetCallbackEvent() string
	GetCallbackUrl() string
}

func (this *ApplicationCallback) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *ApplicationCallback) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewApplicationCallbackFromFace(this)
}

func (this *ApplicationCallback) GetId() int32 {
	return this.Id
}

func (this *ApplicationCallback) GetApplicationId() int32 {
	return this.ApplicationId
}

func (this *ApplicationCallback) GetCallbackEvent() string {
	return this.CallbackEvent
}

func (this *ApplicationCallback) GetCallbackUrl() string {
	return this.CallbackUrl
}

func NewApplicationCallbackFromFace(that ApplicationCallbackFace) *ApplicationCallback {
	this := &ApplicationCallback{}
	this.Id = that.GetId()
	this.ApplicationId = that.GetApplicationId()
	this.CallbackEvent = that.GetCallbackEvent()
	this.CallbackUrl = that.GetCallbackUrl()
	return this
}

type CreateApplicationReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetName() string
}

func (this *CreateApplicationReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationReqFromFace(this)
}

func (this *CreateApplicationReq) GetName() string {
	return this.Name
}

func NewCreateApplicationReqFromFace(that CreateApplicationReqFace) *CreateApplicationReq {
	this := &CreateApplicationReq{}
	this.Name = that.GetName()
	return this
}

type CreateApplicationRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplication() *Application
}

func (this *CreateApplicationResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationRespFromFace(this)
}

func (this *CreateApplicationResp) GetApplication() *Application {
	return this.Application
}

func NewCreateApplicationRespFromFace(that CreateApplicationRespFace) *CreateApplicationResp {
	this := &CreateApplicationResp{}
	this.Application = that.GetApplication()
	return this
}

type CreateApplicationCallbackReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationId() int32
	GetCallbackEvent() string
	GetCallbackUrl() string
}

func (this *CreateApplicationCallbackReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationCallbackReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationCallbackReqFromFace(this)
}

func (this *CreateApplicationCallbackReq) GetApplicationId() int32 {
	return this.ApplicationId
}

func (this *CreateApplicationCallbackReq) GetCallbackEvent() string {
	return this.CallbackEvent
}

func (this *CreateApplicationCallbackReq) GetCallbackUrl() string {
	return this.CallbackUrl
}

func NewCreateApplicationCallbackReqFromFace(that CreateApplicationCallbackReqFace) *CreateApplicationCallbackReq {
	this := &CreateApplicationCallbackReq{}
	this.ApplicationId = that.GetApplicationId()
	this.CallbackEvent = that.GetCallbackEvent()
	this.CallbackUrl = that.GetCallbackUrl()
	return this
}

type CreateApplicationCallbackRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationCallback() *ApplicationCallback
}

func (this *CreateApplicationCallbackResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationCallbackResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationCallbackRespFromFace(this)
}

func (this *CreateApplicationCallbackResp) GetApplicationCallback() *ApplicationCallback {
	return this.ApplicationCallback
}

func NewCreateApplicationCallbackRespFromFace(that CreateApplicationCallbackRespFace) *CreateApplicationCallbackResp {
	this := &CreateApplicationCallbackResp{}
	this.ApplicationCallback = that.GetApplicationCallback()
	return this
}

type GetApplicationByUuidReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationUuid() string
}

func (this *GetApplicationByUuidReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationByUuidReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationByUuidReqFromFace(this)
}

func (this *GetApplicationByUuidReq) GetApplicationUuid() string {
	return this.ApplicationUuid
}

func NewGetApplicationByUuidReqFromFace(that GetApplicationByUuidReqFace) *GetApplicationByUuidReq {
	this := &GetApplicationByUuidReq{}
	this.ApplicationUuid = that.GetApplicationUuid()
	return this
}

type GetApplicationByUuidRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplication() *Application
}

func (this *GetApplicationByUuidResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationByUuidResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationByUuidRespFromFace(this)
}

func (this *GetApplicationByUuidResp) GetApplication() *Application {
	return this.Application
}

func NewGetApplicationByUuidRespFromFace(that GetApplicationByUuidRespFace) *GetApplicationByUuidResp {
	this := &GetApplicationByUuidResp{}
	this.Application = that.GetApplication()
	return this
}

type GetApplicationCallbackReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationId() int32
	GetCallbackEvent() string
}

func (this *GetApplicationCallbackReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationCallbackReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationCallbackReqFromFace(this)
}

func (this *GetApplicationCallbackReq) GetApplicationId() int32 {
	return this.ApplicationId
}

func (this *GetApplicationCallbackReq) GetCallbackEvent() string {
	return this.CallbackEvent
}

func NewGetApplicationCallbackReqFromFace(that GetApplicationCallbackReqFace) *GetApplicationCallbackReq {
	this := &GetApplicationCallbackReq{}
	this.ApplicationId = that.GetApplicationId()
	this.CallbackEvent = that.GetCallbackEvent()
	return this
}

type GetApplicationCallbackRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationCallback() *ApplicationCallback
}

func (this *GetApplicationCallbackResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationCallbackResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationCallbackRespFromFace(this)
}

func (this *GetApplicationCallbackResp) GetApplicationCallback() *ApplicationCallback {
	return this.ApplicationCallback
}

func NewGetApplicationCallbackRespFromFace(that GetApplicationCallbackRespFace) *GetApplicationCallbackResp {
	this := &GetApplicationCallbackResp{}
	this.ApplicationCallback = that.GetApplicationCallback()
	return this
}

type GetApplicationCallbacksReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationId() int32
}

func (this *GetApplicationCallbacksReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationCallbacksReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationCallbacksReqFromFace(this)
}

func (this *GetApplicationCallbacksReq) GetApplicationId() int32 {
	return this.ApplicationId
}

func NewGetApplicationCallbacksReqFromFace(that GetApplicationCallbacksReqFace) *GetApplicationCallbacksReq {
	this := &GetApplicationCallbacksReq{}
	this.ApplicationId = that.GetApplicationId()
	return this
}

type GetApplicationCallbacksRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationCallbacks() []*ApplicationCallback
}

func (this *GetApplicationCallbacksResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationCallbacksResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationCallbacksRespFromFace(this)
}

func (this *GetApplicationCallbacksResp) GetApplicationCallbacks() []*ApplicationCallback {
	return this.ApplicationCallbacks
}

func NewGetApplicationCallbacksRespFromFace(that GetApplicationCallbacksRespFace) *GetApplicationCallbacksResp {
	this := &GetApplicationCallbacksResp{}
	this.ApplicationCallbacks = that.GetApplicationCallbacks()
	return this
}

type DeleteApplicationCallbackReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationId() int32
	GetCallbackEvent() string
}

func (this *DeleteApplicationCallbackReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *DeleteApplicationCallbackReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewDeleteApplicationCallbackReqFromFace(this)
}

func (this *DeleteApplicationCallbackReq) GetApplicationId() int32 {
	return this.ApplicationId
}

func (this *DeleteApplicationCallbackReq) GetCallbackEvent() string {
	return this.CallbackEvent
}

func NewDeleteApplicationCallbackReqFromFace(that DeleteApplicationCallbackReqFace) *DeleteApplicationCallbackReq {
	this := &DeleteApplicationCallbackReq{}
	this.ApplicationId = that.GetApplicationId()
	this.CallbackEvent = that.GetCallbackEvent()
	return this
}

type DeleteApplicationCallbackRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
}

func (this *DeleteApplicationCallbackResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *DeleteApplicationCallbackResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewDeleteApplicationCallbackRespFromFace(this)
}

func NewDeleteApplicationCallbackRespFromFace(that DeleteApplicationCallbackRespFace) *DeleteApplicationCallbackResp {
	this := &DeleteApplicationCallbackResp{}
	return this
}

func (m *Application) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Application) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Application) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Uuid) > 0 {
		i -= len(m.Uuid)
		copy(dAtA[i:], m.Uuid)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.Uuid)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *ApplicationCallback) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationCallback) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplicationCallback) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallbackUrl) > 0 {
		i -= len(m.CallbackUrl)
		copy(dAtA[i:], m.CallbackUrl)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CallbackEvent) > 0 {
		i -= len(m.CallbackEvent)
		copy(dAtA[i:], m.CallbackEvent)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackEvent)))
		i--
		dAtA[i] = 0x1a
	}
	if m.ApplicationId != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.ApplicationId))
		i--
		dAtA[i] = 0x10
	}
	if m.Id != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Application != nil {
		{
			size, err := m.Application.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApplications(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationCallbackReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationCallbackReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationCallbackReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallbackUrl) > 0 {
		i -= len(m.CallbackUrl)
		copy(dAtA[i:], m.CallbackUrl)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CallbackEvent) > 0 {
		i -= len(m.CallbackEvent)
		copy(dAtA[i:], m.CallbackEvent)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackEvent)))
		i--
		dAtA[i] = 0x12
	}
	if m.ApplicationId != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.ApplicationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationCallbackResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationCallbackResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationCallbackResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ApplicationCallback != nil {
		{
			size, err := m.ApplicationCallback.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApplications(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationByUuidReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationByUuidReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationByUuidReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ApplicationUuid) > 0 {
		i -= len(m.ApplicationUuid)
		copy(dAtA[i:], m.ApplicationUuid)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.ApplicationUuid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationByUuidResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationByUuidResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationByUuidResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Application != nil {
		{
			size, err := m.Application.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApplications(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationCallbackReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationCallbackReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationCallbackReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallbackEvent) > 0 {
		i -= len(m.CallbackEvent)
		copy(dAtA[i:], m.CallbackEvent)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackEvent)))
		i--
		dAtA[i] = 0x12
	}
	if m.ApplicationId != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.ApplicationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationCallbackResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationCallbackResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationCallbackResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ApplicationCallback != nil {
		{
			size, err := m.ApplicationCallback.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApplications(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationCallbacksReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationCallbacksReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationCallbacksReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ApplicationId != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.ApplicationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationCallbacksResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationCallbacksResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationCallbacksResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ApplicationCallbacks) > 0 {
		for iNdEx := len(m.ApplicationCallbacks) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ApplicationCallbacks[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApplications(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *DeleteApplicationCallbackReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteApplicationCallbackReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteApplicationCallbackReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallbackEvent) > 0 {
		i -= len(m.CallbackEvent)
		copy(dAtA[i:], m.CallbackEvent)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackEvent)))
		i--
		dAtA[i] = 0x12
	}
	if m.ApplicationId != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.ApplicationId))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *DeleteApplicationCallbackResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *DeleteApplicationCallbackResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *DeleteApplicationCallbackResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	return len(dAtA) - i, nil
}

func encodeVarintApplications(dAtA []byte, offset int, v uint64) int {
	offset -= sovApplications(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Application) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApplications(uint64(m.Id))
	}
	l = len(m.Uuid)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ApplicationCallback) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApplications(uint64(m.Id))
	}
	if m.ApplicationId != 0 {
		n += 1 + sovApplications(uint64(m.ApplicationId))
	}
	l = len(m.CallbackEvent)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.CallbackUrl)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Application != nil {
		l = m.Application.Size()
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationCallbackReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApplicationId != 0 {
		n += 1 + sovApplications(uint64(m.ApplicationId))
	}
	l = len(m.CallbackEvent)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.CallbackUrl)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationCallbackResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApplicationCallback != nil {
		l = m.ApplicationCallback.Size()
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationByUuidReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ApplicationUuid)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationByUuidResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Application != nil {
		l = m.Application.Size()
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationCallbackReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApplicationId != 0 {
		n += 1 + sovApplications(uint64(m.ApplicationId))
	}
	l = len(m.CallbackEvent)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationCallbackResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApplicationCallback != nil {
		l = m.ApplicationCallback.Size()
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationCallbacksReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApplicationId != 0 {
		n += 1 + sovApplications(uint64(m.ApplicationId))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationCallbacksResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ApplicationCallbacks) > 0 {
		for _, e := range m.ApplicationCallbacks {
			l = e.Size()
			n += 1 + l + sovApplications(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteApplicationCallbackReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApplicationId != 0 {
		n += 1 + sovApplications(uint64(m.ApplicationId))
	}
	l = len(m.CallbackEvent)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *DeleteApplicationCallbackResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApplications(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApplications(x uint64) (n int) {
	return sovApplications(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Application) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Application: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Application: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Uuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Uuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplicationCallback) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationCallback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationCallback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationId", wireType)
			}
			m.ApplicationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApplicationId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackEvent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackEvent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Application", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Application == nil {
				m.Application = &Application{}
			}
			if err := m.Application.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationCallbackReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationCallbackReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationCallbackReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationId", wireType)
			}
			m.ApplicationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApplicationId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackEvent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackEvent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationCallbackResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationCallbackResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationCallbackResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationCallback", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApplicationCallback == nil {
				m.ApplicationCallback = &ApplicationCallback{}
			}
			if err := m.ApplicationCallback.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationByUuidReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationByUuidReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationByUuidReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationUuid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApplicationUuid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationByUuidResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationByUuidResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationByUuidResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Application", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Application == nil {
				m.Application = &Application{}
			}
			if err := m.Application.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationCallbackReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationCallbackReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationCallbackReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationId", wireType)
			}
			m.ApplicationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApplicationId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackEvent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackEvent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationCallbackResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationCallbackResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationCallbackResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationCallback", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApplicationCallback == nil {
				m.ApplicationCallback = &ApplicationCallback{}
			}
			if err := m.ApplicationCallback.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationCallbacksReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationCallbacksReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationCallbacksReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationId", wireType)
			}
			m.ApplicationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApplicationId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationCallbacksResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationCallbacksResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationCallbacksResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationCallbacks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApplicationCallbacks = append(m.ApplicationCallbacks, &ApplicationCallback{})
			if err := m.ApplicationCallbacks[len(m.ApplicationCallbacks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteApplicationCallbackReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteApplicationCallbackReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteApplicationCallbackReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationId", wireType)
			}
			m.ApplicationId = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ApplicationId |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackEvent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackEvent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *DeleteApplicationCallbackResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: DeleteApplicationCallbackResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: DeleteApplicationCallbackResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApplications(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApplications
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApplications
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApplications
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApplications        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApplications          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApplications = fmt.Errorf("proto: unexpected end of group")
)
