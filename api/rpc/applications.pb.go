// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: applications.proto

package rpc

import (
	context "context"
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	github_com_gogo_protobuf_proto "github.com/gogo/protobuf/proto"
	proto "github.com/gogo/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type Application struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Application) Reset()         { *m = Application{} }
func (m *Application) String() string { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()    {}
func (*Application) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{0}
}
func (m *Application) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Application) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Application.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Application) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Application.Merge(m, src)
}
func (m *Application) XXX_Size() int {
	return m.Size()
}
func (m *Application) XXX_DiscardUnknown() {
	xxx_messageInfo_Application.DiscardUnknown(m)
}

var xxx_messageInfo_Application proto.InternalMessageInfo

type ApplicationCallback struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ApplicationId        string   `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id"`
	CallbackEvent        string   `protobuf:"bytes,3,opt,name=callback_event,json=callbackEvent,proto3" json:"callback_event"`
	CallbackUrl          string   `protobuf:"bytes,4,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ApplicationCallback) Reset()         { *m = ApplicationCallback{} }
func (m *ApplicationCallback) String() string { return proto.CompactTextString(m) }
func (*ApplicationCallback) ProtoMessage()    {}
func (*ApplicationCallback) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{1}
}
func (m *ApplicationCallback) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ApplicationCallback) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ApplicationCallback.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ApplicationCallback) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ApplicationCallback.Merge(m, src)
}
func (m *ApplicationCallback) XXX_Size() int {
	return m.Size()
}
func (m *ApplicationCallback) XXX_DiscardUnknown() {
	xxx_messageInfo_ApplicationCallback.DiscardUnknown(m)
}

var xxx_messageInfo_ApplicationCallback proto.InternalMessageInfo

type CreateApplicationReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateApplicationReq) Reset()         { *m = CreateApplicationReq{} }
func (m *CreateApplicationReq) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationReq) ProtoMessage()    {}
func (*CreateApplicationReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{2}
}
func (m *CreateApplicationReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationReq.Merge(m, src)
}
func (m *CreateApplicationReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationReq proto.InternalMessageInfo

type CreateApplicationResp struct {
	Application          *Application `protobuf:"bytes,1,opt,name=application,proto3" json:"application"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *CreateApplicationResp) Reset()         { *m = CreateApplicationResp{} }
func (m *CreateApplicationResp) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationResp) ProtoMessage()    {}
func (*CreateApplicationResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{3}
}
func (m *CreateApplicationResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationResp.Merge(m, src)
}
func (m *CreateApplicationResp) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationResp proto.InternalMessageInfo

type CreateApplicationCallbackReq struct {
	ApplicationId        string   `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	CallbackEvent        string   `protobuf:"bytes,2,opt,name=callback_event,json=callbackEvent,proto3" json:"callback_event,omitempty"`
	CallbackUrl          string   `protobuf:"bytes,3,opt,name=callback_url,json=callbackUrl,proto3" json:"callback_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateApplicationCallbackReq) Reset()         { *m = CreateApplicationCallbackReq{} }
func (m *CreateApplicationCallbackReq) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationCallbackReq) ProtoMessage()    {}
func (*CreateApplicationCallbackReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{4}
}
func (m *CreateApplicationCallbackReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationCallbackReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationCallbackReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationCallbackReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationCallbackReq.Merge(m, src)
}
func (m *CreateApplicationCallbackReq) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationCallbackReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationCallbackReq.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationCallbackReq proto.InternalMessageInfo

type CreateApplicationCallbackResp struct {
	ApplicationCallback  *ApplicationCallback `protobuf:"bytes,1,opt,name=application_callback,json=applicationCallback,proto3" json:"application_callback"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateApplicationCallbackResp) Reset()         { *m = CreateApplicationCallbackResp{} }
func (m *CreateApplicationCallbackResp) String() string { return proto.CompactTextString(m) }
func (*CreateApplicationCallbackResp) ProtoMessage()    {}
func (*CreateApplicationCallbackResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{5}
}
func (m *CreateApplicationCallbackResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *CreateApplicationCallbackResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_CreateApplicationCallbackResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *CreateApplicationCallbackResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateApplicationCallbackResp.Merge(m, src)
}
func (m *CreateApplicationCallbackResp) XXX_Size() int {
	return m.Size()
}
func (m *CreateApplicationCallbackResp) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateApplicationCallbackResp.DiscardUnknown(m)
}

var xxx_messageInfo_CreateApplicationCallbackResp proto.InternalMessageInfo

type GetApplicationCallbacksReq struct {
	EntityCode           string   `protobuf:"bytes,1,opt,name=entity_code,json=entityCode,proto3" json:"entity_code,omitempty"`
	CallbackEvent        string   `protobuf:"bytes,2,opt,name=callback_event,json=callbackEvent,proto3" json:"callback_event,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetApplicationCallbacksReq) Reset()         { *m = GetApplicationCallbacksReq{} }
func (m *GetApplicationCallbacksReq) String() string { return proto.CompactTextString(m) }
func (*GetApplicationCallbacksReq) ProtoMessage()    {}
func (*GetApplicationCallbacksReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{6}
}
func (m *GetApplicationCallbacksReq) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationCallbacksReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationCallbacksReq.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationCallbacksReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationCallbacksReq.Merge(m, src)
}
func (m *GetApplicationCallbacksReq) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationCallbacksReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationCallbacksReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationCallbacksReq proto.InternalMessageInfo

type GetApplicationCallbacksResp struct {
	ApplicationCallbacks []*ApplicationCallback `protobuf:"bytes,1,rep,name=application_callbacks,json=applicationCallbacks,proto3" json:"application_callbacks"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *GetApplicationCallbacksResp) Reset()         { *m = GetApplicationCallbacksResp{} }
func (m *GetApplicationCallbacksResp) String() string { return proto.CompactTextString(m) }
func (*GetApplicationCallbacksResp) ProtoMessage()    {}
func (*GetApplicationCallbacksResp) Descriptor() ([]byte, []int) {
	return fileDescriptor_f65f8be3f63a21be, []int{7}
}
func (m *GetApplicationCallbacksResp) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *GetApplicationCallbacksResp) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_GetApplicationCallbacksResp.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *GetApplicationCallbacksResp) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetApplicationCallbacksResp.Merge(m, src)
}
func (m *GetApplicationCallbacksResp) XXX_Size() int {
	return m.Size()
}
func (m *GetApplicationCallbacksResp) XXX_DiscardUnknown() {
	xxx_messageInfo_GetApplicationCallbacksResp.DiscardUnknown(m)
}

var xxx_messageInfo_GetApplicationCallbacksResp proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Application)(nil), "ocpp.Application")
	proto.RegisterType((*ApplicationCallback)(nil), "ocpp.ApplicationCallback")
	proto.RegisterType((*CreateApplicationReq)(nil), "ocpp.CreateApplicationReq")
	proto.RegisterType((*CreateApplicationResp)(nil), "ocpp.CreateApplicationResp")
	proto.RegisterType((*CreateApplicationCallbackReq)(nil), "ocpp.CreateApplicationCallbackReq")
	proto.RegisterType((*CreateApplicationCallbackResp)(nil), "ocpp.CreateApplicationCallbackResp")
	proto.RegisterType((*GetApplicationCallbacksReq)(nil), "ocpp.GetApplicationCallbacksReq")
	proto.RegisterType((*GetApplicationCallbacksResp)(nil), "ocpp.GetApplicationCallbacksResp")
}

func init() { proto.RegisterFile("applications.proto", fileDescriptor_f65f8be3f63a21be) }

var fileDescriptor_f65f8be3f63a21be = []byte{
	// 521 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x94, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x86, 0xbb, 0x4e, 0xa8, 0x60, 0x4c, 0x81, 0x6e, 0x53, 0x70, 0xdc, 0x62, 0xa7, 0x46, 0x95,
	0x10, 0x12, 0xa9, 0xd4, 0x9e, 0x38, 0x92, 0x80, 0x10, 0x17, 0x0e, 0x46, 0x5c, 0x90, 0x20, 0x72,
	0xec, 0x4d, 0x58, 0xe1, 0x66, 0x17, 0xaf, 0x53, 0x89, 0x27, 0x80, 0x1b, 0x2f, 0xc2, 0x83, 0xf4,
	0xc8, 0x91, 0x93, 0x45, 0x73, 0x42, 0x7e, 0x0a, 0x94, 0xb5, 0x4d, 0xd7, 0xb1, 0xdd, 0xf4, 0x12,
	0x65, 0x3c, 0xff, 0xff, 0xef, 0xec, 0x37, 0x96, 0x01, 0x7b, 0x9c, 0x87, 0xd4, 0xf7, 0x62, 0xca,
	0x66, 0xa2, 0xcf, 0x23, 0x16, 0x33, 0xdc, 0x66, 0x3e, 0xe7, 0xe6, 0xd3, 0x29, 0x8d, 0x3f, 0xcd,
	0xc7, 0x7d, 0x9f, 0x9d, 0x1e, 0x4d, 0xd9, 0x94, 0x1d, 0xc9, 0xe6, 0x78, 0x3e, 0x91, 0x95, 0x2c,
	0xe4, 0xbf, 0xcc, 0xe4, 0x0c, 0x41, 0x7f, 0x7e, 0x19, 0x85, 0xef, 0x83, 0x46, 0x03, 0x03, 0xf5,
	0xd0, 0xe3, 0x5b, 0x83, 0xcd, 0x34, 0xb1, 0x35, 0x1a, 0xb8, 0x1a, 0x0d, 0xf0, 0x3e, 0xb4, 0x67,
	0xde, 0x29, 0x31, 0x34, 0xd9, 0xb9, 0x99, 0x26, 0xb6, 0xac, 0x5d, 0xf9, 0xeb, 0xfc, 0x46, 0xb0,
	0xa3, 0xa4, 0x0c, 0xbd, 0x30, 0x1c, 0x7b, 0xfe, 0x67, 0x25, 0xed, 0x46, 0x29, 0xed, 0x19, 0xdc,
	0x51, 0xe6, 0x1f, 0xd1, 0x20, 0xcf, 0xc5, 0x69, 0x62, 0xaf, 0x74, 0xdc, 0x2d, 0xa5, 0x7e, 0x2d,
	0xad, 0x7e, 0x1e, 0x3f, 0x22, 0x67, 0x64, 0x16, 0x1b, 0xad, 0x4b, 0x6b, 0xb9, 0xe3, 0x6e, 0x15,
	0xf5, 0xcb, 0x65, 0x89, 0x4f, 0xe0, 0xf6, 0x7f, 0xc1, 0x3c, 0x0a, 0x8d, 0xb6, 0x34, 0xde, 0x4b,
	0x13, 0xbb, 0xf4, 0xdc, 0xd5, 0x8b, 0xea, 0x5d, 0x14, 0x3a, 0x4f, 0xa0, 0x33, 0x8c, 0x88, 0x17,
	0x13, 0xe5, 0x7e, 0x2e, 0xf9, 0x82, 0x71, 0x0e, 0x44, 0xa2, 0xca, 0x31, 0x7c, 0x80, 0xdd, 0x1a,
	0xad, 0xe0, 0xf8, 0x05, 0xe8, 0xca, 0x2d, 0xa4, 0x47, 0x3f, 0xde, 0xee, 0x2f, 0xf7, 0xd5, 0x57,
	0xb4, 0x83, 0xbb, 0x69, 0x62, 0xab, 0x4a, 0x57, 0x2d, 0x9c, 0x1f, 0x08, 0xf6, 0x2b, 0xf9, 0x05,
	0xeb, 0xe5, 0x4c, 0x87, 0x15, 0xac, 0xd9, 0x74, 0x2b, 0x08, 0x0f, 0x2b, 0x08, 0xb5, 0x4c, 0x56,
	0xc6, 0x75, 0xb0, 0x82, 0x4b, 0x72, 0x2e, 0xc3, 0xf9, 0x86, 0xe0, 0xe1, 0x15, 0x13, 0x09, 0x8e,
	0x27, 0xd0, 0x51, 0x47, 0x2a, 0xcc, 0x39, 0x82, 0x6e, 0x05, 0x41, 0x61, 0x1e, 0x18, 0x69, 0x62,
	0xd7, 0x5a, 0xdd, 0x1d, 0xaf, 0x2a, 0x77, 0x02, 0x30, 0x5f, 0x91, 0xb8, 0x26, 0x48, 0x2c, 0xc1,
	0xd8, 0xa0, 0x93, 0x59, 0x4c, 0xe3, 0xaf, 0x23, 0x9f, 0x05, 0xc5, 0xce, 0x20, 0x7b, 0x34, 0x64,
	0x01, 0xb9, 0x26, 0x12, 0xe7, 0x3b, 0x82, 0xbd, 0xc6, 0x63, 0x04, 0xc7, 0x14, 0x76, 0xeb, 0x46,
	0x16, 0x06, 0xea, 0xb5, 0xae, 0xbe, 0x6e, 0x37, 0x4d, 0xec, 0x7a, 0xaf, 0xdb, 0xa9, 0xb9, 0xaf,
	0x38, 0xfe, 0xa9, 0x01, 0x56, 0x82, 0xde, 0x92, 0xe8, 0x8c, 0xfa, 0x04, 0xbf, 0x81, 0xed, 0xca,
	0x42, 0xb0, 0x99, 0x9d, 0x5b, 0xf7, 0x1e, 0x9b, 0x7b, 0x8d, 0x3d, 0xc1, 0x9d, 0x0d, 0x3c, 0x81,
	0x6e, 0xe3, 0x82, 0xb1, 0xd3, 0xe0, 0x55, 0xde, 0x49, 0xf3, 0xd1, 0x5a, 0x8d, 0x3c, 0xe7, 0x23,
	0x3c, 0x68, 0x00, 0x8b, 0x7b, 0x59, 0x42, 0xf3, 0x7a, 0xcd, 0x83, 0x35, 0x0a, 0xc1, 0x07, 0xdd,
	0xf3, 0x0b, 0x6b, 0xe3, 0xef, 0x85, 0x85, 0xce, 0x17, 0x16, 0xfa, 0xb5, 0xb0, 0xd0, 0x9f, 0x85,
	0x85, 0xde, 0xb7, 0x22, 0xee, 0x8f, 0x37, 0xe5, 0x87, 0xf0, 0xe4, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x86, 0x9b, 0xc6, 0x88, 0x53, 0x05, 0x00, 0x00,
}

type ApplicationFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetId() string
	GetName() string
}

func (this *Application) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *Application) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewApplicationFromFace(this)
}

func (this *Application) GetId() string {
	return this.Id
}

func (this *Application) GetName() string {
	return this.Name
}

func NewApplicationFromFace(that ApplicationFace) *Application {
	this := &Application{}
	this.Id = that.GetId()
	this.Name = that.GetName()
	return this
}

type ApplicationCallbackFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetId() int32
	GetApplicationId() string
	GetCallbackEvent() string
	GetCallbackUrl() string
}

func (this *ApplicationCallback) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *ApplicationCallback) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewApplicationCallbackFromFace(this)
}

func (this *ApplicationCallback) GetId() int32 {
	return this.Id
}

func (this *ApplicationCallback) GetApplicationId() string {
	return this.ApplicationId
}

func (this *ApplicationCallback) GetCallbackEvent() string {
	return this.CallbackEvent
}

func (this *ApplicationCallback) GetCallbackUrl() string {
	return this.CallbackUrl
}

func NewApplicationCallbackFromFace(that ApplicationCallbackFace) *ApplicationCallback {
	this := &ApplicationCallback{}
	this.Id = that.GetId()
	this.ApplicationId = that.GetApplicationId()
	this.CallbackEvent = that.GetCallbackEvent()
	this.CallbackUrl = that.GetCallbackUrl()
	return this
}

type CreateApplicationReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetName() string
}

func (this *CreateApplicationReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationReqFromFace(this)
}

func (this *CreateApplicationReq) GetName() string {
	return this.Name
}

func NewCreateApplicationReqFromFace(that CreateApplicationReqFace) *CreateApplicationReq {
	this := &CreateApplicationReq{}
	this.Name = that.GetName()
	return this
}

type CreateApplicationRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplication() *Application
}

func (this *CreateApplicationResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationRespFromFace(this)
}

func (this *CreateApplicationResp) GetApplication() *Application {
	return this.Application
}

func NewCreateApplicationRespFromFace(that CreateApplicationRespFace) *CreateApplicationResp {
	this := &CreateApplicationResp{}
	this.Application = that.GetApplication()
	return this
}

type CreateApplicationCallbackReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationId() string
	GetCallbackEvent() string
	GetCallbackUrl() string
}

func (this *CreateApplicationCallbackReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationCallbackReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationCallbackReqFromFace(this)
}

func (this *CreateApplicationCallbackReq) GetApplicationId() string {
	return this.ApplicationId
}

func (this *CreateApplicationCallbackReq) GetCallbackEvent() string {
	return this.CallbackEvent
}

func (this *CreateApplicationCallbackReq) GetCallbackUrl() string {
	return this.CallbackUrl
}

func NewCreateApplicationCallbackReqFromFace(that CreateApplicationCallbackReqFace) *CreateApplicationCallbackReq {
	this := &CreateApplicationCallbackReq{}
	this.ApplicationId = that.GetApplicationId()
	this.CallbackEvent = that.GetCallbackEvent()
	this.CallbackUrl = that.GetCallbackUrl()
	return this
}

type CreateApplicationCallbackRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationCallback() *ApplicationCallback
}

func (this *CreateApplicationCallbackResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *CreateApplicationCallbackResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewCreateApplicationCallbackRespFromFace(this)
}

func (this *CreateApplicationCallbackResp) GetApplicationCallback() *ApplicationCallback {
	return this.ApplicationCallback
}

func NewCreateApplicationCallbackRespFromFace(that CreateApplicationCallbackRespFace) *CreateApplicationCallbackResp {
	this := &CreateApplicationCallbackResp{}
	this.ApplicationCallback = that.GetApplicationCallback()
	return this
}

type GetApplicationCallbacksReqFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetEntityCode() string
	GetCallbackEvent() string
}

func (this *GetApplicationCallbacksReq) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationCallbacksReq) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationCallbacksReqFromFace(this)
}

func (this *GetApplicationCallbacksReq) GetEntityCode() string {
	return this.EntityCode
}

func (this *GetApplicationCallbacksReq) GetCallbackEvent() string {
	return this.CallbackEvent
}

func NewGetApplicationCallbacksReqFromFace(that GetApplicationCallbacksReqFace) *GetApplicationCallbacksReq {
	this := &GetApplicationCallbacksReq{}
	this.EntityCode = that.GetEntityCode()
	this.CallbackEvent = that.GetCallbackEvent()
	return this
}

type GetApplicationCallbacksRespFace interface {
	Proto() github_com_gogo_protobuf_proto.Message
	GetApplicationCallbacks() []*ApplicationCallback
}

func (this *GetApplicationCallbacksResp) Proto() github_com_gogo_protobuf_proto.Message {
	return this
}

func (this *GetApplicationCallbacksResp) TestProto() github_com_gogo_protobuf_proto.Message {
	return NewGetApplicationCallbacksRespFromFace(this)
}

func (this *GetApplicationCallbacksResp) GetApplicationCallbacks() []*ApplicationCallback {
	return this.ApplicationCallbacks
}

func NewGetApplicationCallbacksRespFromFace(that GetApplicationCallbacksRespFace) *GetApplicationCallbacksResp {
	this := &GetApplicationCallbacksResp{}
	this.ApplicationCallbacks = that.GetApplicationCallbacks()
	return this
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ApplicationServiceClient is the client API for ApplicationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ApplicationServiceClient interface {
	CreateApplication(ctx context.Context, in *CreateApplicationReq, opts ...grpc.CallOption) (*CreateApplicationResp, error)
	CreateApplicationCallback(ctx context.Context, in *CreateApplicationCallbackReq, opts ...grpc.CallOption) (*CreateApplicationCallbackResp, error)
	GetApplicationCallbacks(ctx context.Context, in *GetApplicationCallbacksReq, opts ...grpc.CallOption) (*GetApplicationCallbacksResp, error)
}

type applicationServiceClient struct {
	cc *grpc.ClientConn
}

func NewApplicationServiceClient(cc *grpc.ClientConn) ApplicationServiceClient {
	return &applicationServiceClient{cc}
}

func (c *applicationServiceClient) CreateApplication(ctx context.Context, in *CreateApplicationReq, opts ...grpc.CallOption) (*CreateApplicationResp, error) {
	out := new(CreateApplicationResp)
	err := c.cc.Invoke(ctx, "/ocpp.ApplicationService/CreateApplication", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) CreateApplicationCallback(ctx context.Context, in *CreateApplicationCallbackReq, opts ...grpc.CallOption) (*CreateApplicationCallbackResp, error) {
	out := new(CreateApplicationCallbackResp)
	err := c.cc.Invoke(ctx, "/ocpp.ApplicationService/CreateApplicationCallback", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *applicationServiceClient) GetApplicationCallbacks(ctx context.Context, in *GetApplicationCallbacksReq, opts ...grpc.CallOption) (*GetApplicationCallbacksResp, error) {
	out := new(GetApplicationCallbacksResp)
	err := c.cc.Invoke(ctx, "/ocpp.ApplicationService/GetApplicationCallbacks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ApplicationServiceServer is the server API for ApplicationService service.
type ApplicationServiceServer interface {
	CreateApplication(context.Context, *CreateApplicationReq) (*CreateApplicationResp, error)
	CreateApplicationCallback(context.Context, *CreateApplicationCallbackReq) (*CreateApplicationCallbackResp, error)
	GetApplicationCallbacks(context.Context, *GetApplicationCallbacksReq) (*GetApplicationCallbacksResp, error)
}

// UnimplementedApplicationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedApplicationServiceServer struct {
}

func (*UnimplementedApplicationServiceServer) CreateApplication(ctx context.Context, req *CreateApplicationReq) (*CreateApplicationResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApplication not implemented")
}
func (*UnimplementedApplicationServiceServer) CreateApplicationCallback(ctx context.Context, req *CreateApplicationCallbackReq) (*CreateApplicationCallbackResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateApplicationCallback not implemented")
}
func (*UnimplementedApplicationServiceServer) GetApplicationCallbacks(ctx context.Context, req *GetApplicationCallbacksReq) (*GetApplicationCallbacksResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApplicationCallbacks not implemented")
}

func RegisterApplicationServiceServer(s *grpc.Server, srv ApplicationServiceServer) {
	s.RegisterService(&_ApplicationService_serviceDesc, srv)
}

func _ApplicationService_CreateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).CreateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocpp.ApplicationService/CreateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).CreateApplication(ctx, req.(*CreateApplicationReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_CreateApplicationCallback_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateApplicationCallbackReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).CreateApplicationCallback(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocpp.ApplicationService/CreateApplicationCallback",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).CreateApplicationCallback(ctx, req.(*CreateApplicationCallbackReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ApplicationService_GetApplicationCallbacks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApplicationCallbacksReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ApplicationServiceServer).GetApplicationCallbacks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ocpp.ApplicationService/GetApplicationCallbacks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ApplicationServiceServer).GetApplicationCallbacks(ctx, req.(*GetApplicationCallbacksReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ApplicationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ocpp.ApplicationService",
	HandlerType: (*ApplicationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateApplication",
			Handler:    _ApplicationService_CreateApplication_Handler,
		},
		{
			MethodName: "CreateApplicationCallback",
			Handler:    _ApplicationService_CreateApplicationCallback_Handler,
		},
		{
			MethodName: "GetApplicationCallbacks",
			Handler:    _ApplicationService_GetApplicationCallbacks_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "applications.proto",
}

func (m *Application) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Application) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Application) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *ApplicationCallback) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ApplicationCallback) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ApplicationCallback) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallbackUrl) > 0 {
		i -= len(m.CallbackUrl)
		copy(dAtA[i:], m.CallbackUrl)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.CallbackEvent) > 0 {
		i -= len(m.CallbackEvent)
		copy(dAtA[i:], m.CallbackEvent)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackEvent)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.ApplicationId) > 0 {
		i -= len(m.ApplicationId)
		copy(dAtA[i:], m.ApplicationId)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.ApplicationId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Id != 0 {
		i = encodeVarintApplications(dAtA, i, uint64(m.Id))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Application != nil {
		{
			size, err := m.Application.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApplications(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationCallbackReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationCallbackReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationCallbackReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallbackUrl) > 0 {
		i -= len(m.CallbackUrl)
		copy(dAtA[i:], m.CallbackUrl)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackUrl)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.CallbackEvent) > 0 {
		i -= len(m.CallbackEvent)
		copy(dAtA[i:], m.CallbackEvent)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackEvent)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.ApplicationId) > 0 {
		i -= len(m.ApplicationId)
		copy(dAtA[i:], m.ApplicationId)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.ApplicationId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *CreateApplicationCallbackResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *CreateApplicationCallbackResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *CreateApplicationCallbackResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ApplicationCallback != nil {
		{
			size, err := m.ApplicationCallback.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintApplications(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationCallbacksReq) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationCallbacksReq) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationCallbacksReq) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.CallbackEvent) > 0 {
		i -= len(m.CallbackEvent)
		copy(dAtA[i:], m.CallbackEvent)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.CallbackEvent)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.EntityCode) > 0 {
		i -= len(m.EntityCode)
		copy(dAtA[i:], m.EntityCode)
		i = encodeVarintApplications(dAtA, i, uint64(len(m.EntityCode)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *GetApplicationCallbacksResp) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *GetApplicationCallbacksResp) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *GetApplicationCallbacksResp) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.ApplicationCallbacks) > 0 {
		for iNdEx := len(m.ApplicationCallbacks) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.ApplicationCallbacks[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintApplications(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func encodeVarintApplications(dAtA []byte, offset int, v uint64) int {
	offset -= sovApplications(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Application) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *ApplicationCallback) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Id != 0 {
		n += 1 + sovApplications(uint64(m.Id))
	}
	l = len(m.ApplicationId)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.CallbackEvent)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.CallbackUrl)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Application != nil {
		l = m.Application.Size()
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationCallbackReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ApplicationId)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.CallbackEvent)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.CallbackUrl)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *CreateApplicationCallbackResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.ApplicationCallback != nil {
		l = m.ApplicationCallback.Size()
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationCallbacksReq) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.EntityCode)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	l = len(m.CallbackEvent)
	if l > 0 {
		n += 1 + l + sovApplications(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *GetApplicationCallbacksResp) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.ApplicationCallbacks) > 0 {
		for _, e := range m.ApplicationCallbacks {
			l = e.Size()
			n += 1 + l + sovApplications(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovApplications(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozApplications(x uint64) (n int) {
	return sovApplications(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Application) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Application: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Application: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *ApplicationCallback) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ApplicationCallback: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ApplicationCallback: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			m.Id = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Id |= int32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApplicationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackEvent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackEvent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Application", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Application == nil {
				m.Application = &Application{}
			}
			if err := m.Application.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationCallbackReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationCallbackReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationCallbackReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApplicationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackEvent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackEvent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *CreateApplicationCallbackResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: CreateApplicationCallbackResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: CreateApplicationCallbackResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationCallback", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.ApplicationCallback == nil {
				m.ApplicationCallback = &ApplicationCallback{}
			}
			if err := m.ApplicationCallback.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationCallbacksReq) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationCallbacksReq: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationCallbacksReq: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EntityCode", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EntityCode = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CallbackEvent", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CallbackEvent = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *GetApplicationCallbacksResp) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: GetApplicationCallbacksResp: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: GetApplicationCallbacksResp: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ApplicationCallbacks", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthApplications
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthApplications
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ApplicationCallbacks = append(m.ApplicationCallbacks, &ApplicationCallback{})
			if err := m.ApplicationCallbacks[len(m.ApplicationCallbacks)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipApplications(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthApplications
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipApplications(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowApplications
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowApplications
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthApplications
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupApplications
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthApplications
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthApplications        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowApplications          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupApplications = fmt.Errorf("proto: unexpected end of group")
)
