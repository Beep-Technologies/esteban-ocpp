syntax = "proto3";

package ocpp;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option go_package = "rpc";
option (gogoproto.marshaler_all) = true;
option (gogoproto.sizer_all) = true;
option (gogoproto.unmarshaler_all) = true;
option (gogoproto.goproto_getters_all) = false;
option (gogoproto.face_all) = true;

message Transaction {
    int32 id = 1;
    int32 charge_point_id = 2;
    int32 connector_id = 3;
    string id_tag = 4;
    bool started = 5;
    bool stopped = 6;
    string start_timestamp = 7;
    string stop_timestamp = 8;
    int32 start_meter_value = 9;
    int32 stop_meter_value = 10;
    string stop_reason = 11;
}

message CreateTransactionReq {
    int32 charge_point_id = 1;
    int32 connector_id = 2;
}

message CreateTransactionResp {
    int32 id = 1;
    int32 charge_point_id = 2;
    int32 connector_id = 3;
    string id_tag = 4;
    bool started = 5;
    bool stopped = 6;
    string start_timestamp = 7;
    string stop_timestamp = 8;
    int32 start_meter_value = 9;
    int32 stop_meter_value = 10;
    string stop_reason = 11;
}

message GetTransactionByIdReq {
    int32 id = 1;
}

message GetTransactionByIdResp {
    int32 id = 1;
    int32 charge_point_id = 2;
    int32 connector_id = 3;
    string id_tag = 4;
    bool started = 5;
    bool stopped = 6;
    string start_timestamp = 7;
    string stop_timestamp = 8;
    int32 start_meter_value = 9;
    int32 stop_meter_value = 10;
    string stop_reason = 11;
}

message GetChargePointOngoingTransactionReq {
    int32 charge_point_id = 1;
    int32 connector_id = 2;
}

message GetChargePointOngoingTransactionResp {
    bool transaction_ongoing = 1;
    Transaction transaction = 2;
}

message StartTransactionReq {
    int32 id = 1;
    int32 start_meter_value = 2;
}

message StartTransactionResp {}

message AbortTransactionReq {
    int32 id = 1;
}

message AbortTransactionResp {}

message StopTransactionReq {
    int32 id = 1;
    int32 stop_meter_value = 2;
    string stop_reason = 3;
}

message StopTransactionResp {}